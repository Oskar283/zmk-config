#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Linux OS
#define HOST_OS 1
#include "zmk-helpers/helper.h"

#define DEFAULT 0
#define SYM 1
#define NAV 2
#define ADJ 3

// Swedish keymap

#define SV_AE    SEMICOLON           // Æ
#define SV_OE    SINGLE_QUOTE        // Ø
#define SV_AA    LEFT_BRACKET        // Å
#define SV_QUOT  DOUBLE_QUOTES       // "
#define SV_PLUS  EQUALS              // +
#define SV_MINUS PLUS               // -
#define SV_SEMI  LS(COMMA)        // ; on AltGr + ,
#define SV_COLN  LS(PERIOD)       // : on AltGr + .
#define SV_UNDS  UNDERSCORE          // _
#define SV_COMM  COMMA               // ,
#define SV_DOT   PERIOD              // .
#define SV_LPAR  LEFT_PAREN          // (
#define SV_RPAR  RIGHT_PAREN         // )
#define SV_LBRC  RA(N7)       // { on AltGr + 7
#define SV_RBRC  RA(N0)       // } on AltGr + 0
#define SV_PIPE  RA(N1)       // | on AltGr + 1
#define SV_AMPR  AMPERSAND           // &
#define SV_HASH  RA(RIGHT_BRACE)  // # on AltGr + '
#define SV_AT    RA(N2)       // @ on AltGr + 2
#define SV_DLR   RA(N4)       // $ on AltGr + 4
#define SV_EURO  RA(N5)       // € on AltGr + 5
#define SV_LBKT  RA(N8)       // [ on AltGr + 8
#define SV_RBKT  RA(N9)       // ] on AltGr + 9
#define SV_BSLS  RA(MINUS)        // \ on AltGr + -
#define SV_LESS  LS(COMMA)        // < on Shift + ,
#define SV_GRTR  LS(PERIOD)       // > on Shift + .
#define SV_QUES  LS(MINUS)        // ? on Shift + -
#define SV_EXLM  LS(N1)       // ! on Shift + 1
#define SV_DQUO  LS(N2)       // " on Shift + 2


/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp F1 &kp F2     &kp F3      &kp F4       &kp F5              &kp F6 &kp F7       &kp F8      &kp F9       &kp F10   &kp F11
                &kp TAB   &kp Q  &kp W      &kp F       &kp P        &kp B               &kp J  &kp L        &kp U       &kp Y        &kp SV_SEMI &kp SV_PLUS
                &kp ESC   &kp A  &mt LALT R &mt LSHFT S &mt LCTRL T  &kp G               &kp M  &mt LCTRL N  &mt LSHFT E &mt LALT I   &kp O    &kp SV_QUOT
                &kp BSLH  &kp Z  &kp X      &kp C       &kp D        &kp V               &kp K  &kp H        &kp COMMA   &kp DOT      &kp FSLH &kp DQT
                                 &kp SV_LBKT   &kp SV_RBKT                                                         &kp LPAR    &kp RPAR
                                                         &mo NAV  &kp SPACE                   &kp BSPC &lt SYM ENTER
                                                         &kp N1   &kp HOME                    &kp END  &kp DEL
                                                         &kp BSPC &kp GRAVE                   &kp LGUI &kp LALT
            >;
        };

        sym_layer {
            bindings = <
                &trans  &trans   &trans &trans   &trans     &trans                &trans    &trans   &trans   &trans    &trans    &trans
                &trans  &kp 1    &kp 2  &kp 3    &kp 4      &kp 5                 &kp 6     &kp 7    &kp 8    &kp 9     &kp 0     &kp SV_AA
                &kp TILDE  &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PERCENT           &kp CARET &kp AMPS &kp STAR &kp EQUAL &kp SV_OE &kp SV_AE
                &trans  &trans   &trans &trans   &trans     &trans                &trans    &trans   &kp LT   &kp GT    &kp QMARK    &kp PLUS
                                 &trans &trans                                                       &trans   &trans
                                             &mo ADJ &trans               &trans &trans
                                             &trans  &trans               &trans &trans
                                             &trans  &trans               &trans &trans
            >;
        };

        nav_layer {
            bindings = <
                &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                &kp F6 &kp F7  &kp F8   &kp F9 &kp F10   &kp F11
                &trans  &trans &trans &trans &trans &trans                &trans &trans  &trans   &trans &trans    &trans
                &trans  &trans &trans &trans &trans &trans                &kp HOME &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp END
                &trans  &trans &trans &trans &trans &trans                &trans &trans  &trans   &trans &trans    &trans
                               &kp LBRC &kp RBRC                                         &trans   &trans
                                             &trans &trans                &trans &mo ADJ
                                             &trans &trans                &trans &trans
                                             &trans &trans                &trans &trans
            >;
        };

        adjust_layer {
            bindings = <
                &none &bt BT_SEL 0 &out OUT_BLE &none &none  &none            &none       &none  &none &none &none &none
                &none &bt BT_SEL 1 &out OUT_USB &none &sys_reset &none            &none       &sys_reset &none &none &none &none
                &none &bt BT_SEL 2 &none        &none &none  &none            &none       &none  &none &none &none &none
                &none &bt BT_SEL 3 &bt BT_CLR   &none &none  &bootloader      &bootloader &none  &none &none &none &none
                                   &none        &none                                            &none &none
                                                      &none &none             &none &none
                                                      &none &none             &none &none
                                                      &none &none             &none &none
            >;
        };
    };
};
